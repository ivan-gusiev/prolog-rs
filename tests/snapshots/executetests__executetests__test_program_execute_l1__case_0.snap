---
source: tests/executetests.rs
expression: "case(input, output)"
---
(p(Z, h(Z,W), f(W)), p(f(X), h(Y, f(a)), Y))
-----
h: HEAP[16]
s: HEAP[6]
p: CODE[19]
mode: write
fail: false
halt: false
code:
000	get_structure f/1, X1
001	unify_variable X4
002	get_structure h/2, X2
003	unify_variable X5
004	unify_variable X6
005	get_value X5, X3
006	get_structure f/1, X6
007	unify_variable X7
008	get_structure a/0, X7
009	proceed
010	allocate 2
011	put_variable Y1, X1
012	put_structure h/2, X2
013	set_value Y1
014	set_variable Y2
015	put_structure f/1, X3
016	set_value Y2
017	call @0
018	publish

heap:
000	<STR,9>
001	<STR,2>
002	h/2
003	<REF,0>
004	<REF,10>
005	<STR,6>
006	f/1
007	<REF,4>
008	<STR,9>
009	f/1
010	<STR,12>
011	<STR,12>
012	f/1
013	<STR,15>
014	<STR,15>
015	a/0

regs:
000	<EMPTY>
001	<REF,0>
002	<STR,2>
003	<STR,6>
004	<REF,10>
005	<REF,0>
006	<REF,4>
007	<REF,13>

pdl:

stack depth 0, cp=CODE[0]:
000	<REF,0>
001	<REF,4>


000	W	(HEAP[4]) =	<REF,10>	// f(a)
001	Z	(HEAP[0]) =	<STR,9>	// f(f(a))

000	X	(HEAP[10]) =	<STR,12>	// f(a)
001	Y	(HEAP[0]) =	<STR,9>	// f(f(a))

